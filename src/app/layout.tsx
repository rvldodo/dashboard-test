import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import TRPCReactProvider from "@/trpc/react";
import "@/style/global.css";
import { auth } from "@/server/auth";
import { Toaster } from "sonner";
import { AntdRegistry } from "@ant-design/nextjs-registry";
import { ConfigProvider } from "antd";
import { SessionProvider } from "next-auth/react";
import { Suspense } from "react";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const session = await auth();

	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<TRPCReactProvider session={session}>
					<Suspense>
						<AntdRegistry>
							<ConfigProvider
								theme={{
									token: {
										fontFamily: "var(--font-geist)",
									},
								}}
							>
								<SessionProvider>
									<Toaster
										duration={3000}
										style={{ fontFamily: "var(--font-geist)" }}
										position="top-center"
										toastOptions={{ unstyled: true, className: "w-full" }}
									/>
									{children}
								</SessionProvider>
							</ConfigProvider>
						</AntdRegistry>
					</Suspense>
				</TRPCReactProvider>
			</body>
		</html>
	);
}
